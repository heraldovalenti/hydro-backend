package com.aes.dashboard.backend.model.accumulation;import com.aes.dashboard.backend.model.DataOrigin;import com.aes.dashboard.backend.model.Observation;import java.util.List;import java.util.Map;import java.util.Optional;public abstract class RainAccumulator {    private static final Map<DataOrigin, RainAccumulator> dataOriginAccumulatorMap = Map.of(            new DataOrigin(1), new AesRainAccumulator(),            new DataOrigin(2), new WURainAccumulator()    );    public static Optional<RainAccumulator> accumulatorForDataOrigin(DataOrigin dataOrigin) {        return dataOriginAccumulatorMap.containsKey(dataOrigin) ?            Optional.of(dataOriginAccumulatorMap.get(dataOrigin)) : Optional.empty();    }    public abstract double accumulate(List<Observation> observations);}